syntax = "proto3";

package accounts;

import "google/protobuf/timestamp.proto";

option go_package = "./proto";

service AccountService {
    // Creates a new wallet for the customer with a stating amount of 0, if the accoutn exists the currency is updated
    // but the wallet amount will not change.
    rpc CreateWallet(CreateWalletRequest) returns (Wallet);
    // Creates a transaction for the customer; if the customer is not found, a new wallet is created with a starting amout
    // of the transaction amount and the transaction is added to the ledger.
    rpc CreateTransaction(Transaction) returns (Transaction);
    // Returns the ledger for the customer.
    rpc GetLedger(GetLedgerRequest) returns (GetLedgerResponse);
}

message CreateWalletRequest {
    string customer_id = 1;
    Currency currency = 3;
}

message Wallet {
    string customer_id = 1;
    // this number is signed, so it can be negative on a credit transaction
    // and positive on a debit transaction.
    double balance = 2;
    Currency currency = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
}

message Transaction {
    // Transaction ID is generated by the server; output only.
    string transaction_id = 1;
    string customer_id = 2;
    // this number is signed, so it can be negative on a credit transaction
    // and positive on a debit transaction.
    double amount = 3;
    Currency currency = 4;
    google.protobuf.Timestamp created_at = 5;
}

enum Currency {
    CURRENCY_UNSPECIFIED = 0;
    CURRENCY_ETH = 1;
    CURRENCY_BTC = 2;
    CURRENCY_USD = 3;
}

message GetLedgerRequest {
    string customer_id = 1;
    uint32 limit = 2;
    uint32 offset = 3;
}

message GetLedgerResponse {
    repeated Transaction ledger = 1;
}
